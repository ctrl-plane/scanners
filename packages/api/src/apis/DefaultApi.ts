/* tslint:disable */
/* eslint-disable */
/**
 * Deployment Targets API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UpdateDeploymentTargetByNameRequest,
} from '../models/index';
import {
    UpdateDeploymentTargetByNameRequestFromJSON,
    UpdateDeploymentTargetByNameRequestToJSON,
} from '../models/index';

export interface UpdateDeploymentTargetByNameOperationRequest {
    workspace: string;
    name: string;
    updateDeploymentTargetByNameRequest: UpdateDeploymentTargetByNameRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Update Kubernetes deployment target by name
     */
    async updateDeploymentTargetByNameRaw(requestParameters: UpdateDeploymentTargetByNameOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['workspace'] == null) {
            throw new runtime.RequiredError(
                'workspace',
                'Required parameter "workspace" was null or undefined when calling updateDeploymentTargetByName().'
            );
        }

        if (requestParameters['name'] == null) {
            throw new runtime.RequiredError(
                'name',
                'Required parameter "name" was null or undefined when calling updateDeploymentTargetByName().'
            );
        }

        if (requestParameters['updateDeploymentTargetByNameRequest'] == null) {
            throw new runtime.RequiredError(
                'updateDeploymentTargetByNameRequest',
                'Required parameter "updateDeploymentTargetByNameRequest" was null or undefined when calling updateDeploymentTargetByName().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/{workspace}/deployment-targets/name/{name}`.replace(`{${"workspace"}}`, encodeURIComponent(String(requestParameters['workspace']))).replace(`{${"name"}}`, encodeURIComponent(String(requestParameters['name']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateDeploymentTargetByNameRequestToJSON(requestParameters['updateDeploymentTargetByNameRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Update Kubernetes deployment target by name
     */
    async updateDeploymentTargetByName(requestParameters: UpdateDeploymentTargetByNameOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.updateDeploymentTargetByNameRaw(requestParameters, initOverrides);
    }

}
