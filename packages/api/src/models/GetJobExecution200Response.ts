/* tslint:disable */
/* eslint-disable */
/**
 * Ctrlplane API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetJobExecution200Response
 */
export interface GetJobExecution200Response {
    /**
     * 
     * @type {string}
     * @memberof GetJobExecution200Response
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GetJobExecution200Response
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof GetJobExecution200Response
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof GetJobExecution200Response
     */
    jobDispatcherId: string;
    /**
     * 
     * @type {object}
     * @memberof GetJobExecution200Response
     */
    jobDispatcherConfig: object;
    /**
     * 
     * @type {string}
     * @memberof GetJobExecution200Response
     */
    externalRunId: string;
    /**
     * 
     * @type {object}
     * @memberof GetJobExecution200Response
     */
    release?: object;
    /**
     * 
     * @type {object}
     * @memberof GetJobExecution200Response
     */
    deployment?: object;
    /**
     * 
     * @type {object}
     * @memberof GetJobExecution200Response
     */
    config: object;
    /**
     * 
     * @type {object}
     * @memberof GetJobExecution200Response
     */
    runbook?: object;
    /**
     * 
     * @type {object}
     * @memberof GetJobExecution200Response
     */
    targets?: object;
    /**
     * 
     * @type {object}
     * @memberof GetJobExecution200Response
     */
    environment?: object;
}

/**
 * Check if a given object implements the GetJobExecution200Response interface.
 */
export function instanceOfGetJobExecution200Response(value: object): value is GetJobExecution200Response {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('jobDispatcherId' in value) || value['jobDispatcherId'] === undefined) return false;
    if (!('jobDispatcherConfig' in value) || value['jobDispatcherConfig'] === undefined) return false;
    if (!('externalRunId' in value) || value['externalRunId'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function GetJobExecution200ResponseFromJSON(json: any): GetJobExecution200Response {
    return GetJobExecution200ResponseFromJSONTyped(json, false);
}

export function GetJobExecution200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetJobExecution200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'status': json['status'],
        'message': json['message'],
        'jobDispatcherId': json['jobDispatcherId'],
        'jobDispatcherConfig': json['jobDispatcherConfig'],
        'externalRunId': json['externalRunId'],
        'release': json['release'] == null ? undefined : json['release'],
        'deployment': json['deployment'] == null ? undefined : json['deployment'],
        'config': json['config'],
        'runbook': json['runbook'] == null ? undefined : json['runbook'],
        'targets': json['targets'] == null ? undefined : json['targets'],
        'environment': json['environment'] == null ? undefined : json['environment'],
    };
}

export function GetJobExecution200ResponseToJSON(value?: GetJobExecution200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'status': value['status'],
        'message': value['message'],
        'jobDispatcherId': value['jobDispatcherId'],
        'jobDispatcherConfig': value['jobDispatcherConfig'],
        'externalRunId': value['externalRunId'],
        'release': value['release'],
        'deployment': value['deployment'],
        'config': value['config'],
        'runbook': value['runbook'],
        'targets': value['targets'],
        'environment': value['environment'],
    };
}

